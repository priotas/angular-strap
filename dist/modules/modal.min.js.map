{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","$get","forEach","requestAnimationFrame","bodyElement","backdropCount","dialogBaseZindex","validSizes","ModalFactory","config","$modal","scope","$emit","options","prefixEvent","isDefined","onShow","isFunction","onHide","toggle","hide","animation","unbindBackdropEvents","modalElement","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyUp","focus","evt","preventDefault","modalScope","$isShown","$destroy","$element","parseInt","backdropBaseZindex","compile","$scope","$new","$rootScope","id","$id","attr","key","$show","$sce","trustAsHtml","$$postDigest","left","bottom","right","prefixClass","promise","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","z-index","link","clonedElement","onBeforeShow","display","defaultPrevented","addClass","customClass","findElement","$animate","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","version","leave","leaveAnimateCallback","onBeforeHide","unbindKeyboardEvents","which","directive","$root","$$phase","$digest","restrict","query","document","querySelectorAll","lg","sm","$window","setTimeout","body","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","extend","bsModal","modal","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      var validSizes = {\n        lg: 'modal-lg',\n        sm: 'modal-sm'\n      };\n\n      function ModalFactory (config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px'});\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({'z-index': dialogBaseZindex + (backdropCount * 20)});\n            backdropElement.css({'z-index': backdropBaseZindex + (backdropCount * 20)});\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: size\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            // decrement number of backdrops\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          bodyElement.removeClass(options.prefixClass + '-open');\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          if (evt.which === 27 && $modal.$isShown) {\n            $modal.hide();\n            evt.stopPropagation();\n          }\n\n        };\n\n        function bindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick (evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n\n        function preventEventDefault (evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement () {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}